# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/ray/protobuf/node_manager.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import common_pb2 as src_dot_ray_dot_protobuf_dot_common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='src/ray/protobuf/node_manager.proto',
  package='ray.rpc',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n#src/ray/protobuf/node_manager.proto\x12\x07ray.rpc\x1a\x1dsrc/ray/protobuf/common.proto\"L\n\x12WorkerLeaseRequest\x12\x36\n\rresource_spec\x18\x01 \x01(\x0b\x32\x11.ray.rpc.TaskSpecR\x0cresourceSpec\"\xda\x01\n\x10WorkerLeaseReply\x12\x37\n\x0eworker_address\x18\x01 \x01(\x0b\x32\x10.ray.rpc.AddressR\rworkerAddress\x12G\n\x17retry_at_raylet_address\x18\x02 \x01(\x0b\x32\x10.ray.rpc.AddressR\x14retryAtRayletAddress\x12\x44\n\x10resource_mapping\x18\x03 \x03(\x0b\x32\x19.ray.rpc.ResourceMapEntryR\x0fresourceMapping\"\x80\x01\n\x13ReturnWorkerRequest\x12\x1f\n\x0bworker_port\x18\x01 \x01(\x05R\nworkerPort\x12\x1b\n\tworker_id\x18\x02 \x01(\x0cR\x08workerId\x12+\n\x11\x64isconnect_worker\x18\x03 \x01(\x08R\x10\x64isconnectWorker\"\x13\n\x11ReturnWorkerReply\"i\n\x12\x46orwardTaskRequest\x12\x17\n\x07task_id\x18\x01 \x01(\x0cR\x06taskId\x12:\n\x11uncommitted_tasks\x18\x02 \x03(\x0b\x32\r.ray.rpc.TaskR\x10uncommittedTasks\"\x12\n\x10\x46orwardTaskReply\"\x12\n\x10NodeStatsRequest\"<\n\x0bWorkerStats\x12\x10\n\x03pid\x18\x01 \x01(\rR\x03pid\x12\x1b\n\tis_driver\x18\x02 \x01(\x08R\x08isDriver\"\xf4\x03\n\x08ViewData\x12\x1b\n\tview_name\x18\x01 \x01(\tR\x08viewName\x12\x35\n\x08measures\x18\x02 \x03(\x0b\x32\x19.ray.rpc.ViewData.MeasureR\x08measures\x1a\x93\x03\n\x07Measure\x12\x12\n\x04tags\x18\x01 \x01(\tR\x04tags\x12\x1b\n\tint_value\x18\x02 \x01(\x03R\x08intValue\x12!\n\x0c\x64ouble_value\x18\x03 \x01(\x01R\x0b\x64oubleValue\x12)\n\x10\x64istribution_min\x18\x04 \x01(\x01R\x0f\x64istributionMin\x12+\n\x11\x64istribution_mean\x18\x05 \x01(\x01R\x10\x64istributionMean\x12)\n\x10\x64istribution_max\x18\x06 \x01(\x01R\x0f\x64istributionMax\x12-\n\x12\x64istribution_count\x18\x07 \x01(\x01R\x11\x64istributionCount\x12\x44\n\x1e\x64istribution_bucket_boundaries\x18\x08 \x03(\x01R\x1c\x64istributionBucketBoundaries\x12<\n\x1a\x64istribution_bucket_counts\x18\t \x03(\x01R\x18\x64istributionBucketCounts\"{\n\x0eNodeStatsReply\x12\x39\n\rworkers_stats\x18\x01 \x03(\x0b\x32\x14.ray.rpc.WorkerStatsR\x0cworkersStats\x12.\n\tview_data\x18\x02 \x03(\x0b\x32\x11.ray.rpc.ViewDataR\x08viewData2\xb7\x02\n\x12NodeManagerService\x12L\n\x12RequestWorkerLease\x12\x1b.ray.rpc.WorkerLeaseRequest\x1a\x19.ray.rpc.WorkerLeaseReply\x12H\n\x0cReturnWorker\x12\x1c.ray.rpc.ReturnWorkerRequest\x1a\x1a.ray.rpc.ReturnWorkerReply\x12\x45\n\x0b\x46orwardTask\x12\x1b.ray.rpc.ForwardTaskRequest\x1a\x19.ray.rpc.ForwardTaskReply\x12\x42\n\x0cGetNodeStats\x12\x19.ray.rpc.NodeStatsRequest\x1a\x17.ray.rpc.NodeStatsReplyb\x06proto3')
  ,
  dependencies=[src_dot_ray_dot_protobuf_dot_common__pb2.DESCRIPTOR,])




_WORKERLEASEREQUEST = _descriptor.Descriptor(
  name='WorkerLeaseRequest',
  full_name='ray.rpc.WorkerLeaseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_spec', full_name='ray.rpc.WorkerLeaseRequest.resource_spec', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='resourceSpec', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=79,
  serialized_end=155,
)


_WORKERLEASEREPLY = _descriptor.Descriptor(
  name='WorkerLeaseReply',
  full_name='ray.rpc.WorkerLeaseReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='worker_address', full_name='ray.rpc.WorkerLeaseReply.worker_address', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='workerAddress', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='retry_at_raylet_address', full_name='ray.rpc.WorkerLeaseReply.retry_at_raylet_address', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='retryAtRayletAddress', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='resource_mapping', full_name='ray.rpc.WorkerLeaseReply.resource_mapping', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='resourceMapping', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=158,
  serialized_end=376,
)


_RETURNWORKERREQUEST = _descriptor.Descriptor(
  name='ReturnWorkerRequest',
  full_name='ray.rpc.ReturnWorkerRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='worker_port', full_name='ray.rpc.ReturnWorkerRequest.worker_port', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='workerPort', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='worker_id', full_name='ray.rpc.ReturnWorkerRequest.worker_id', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='workerId', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='disconnect_worker', full_name='ray.rpc.ReturnWorkerRequest.disconnect_worker', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='disconnectWorker', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=379,
  serialized_end=507,
)


_RETURNWORKERREPLY = _descriptor.Descriptor(
  name='ReturnWorkerReply',
  full_name='ray.rpc.ReturnWorkerReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=509,
  serialized_end=528,
)


_FORWARDTASKREQUEST = _descriptor.Descriptor(
  name='ForwardTaskRequest',
  full_name='ray.rpc.ForwardTaskRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='ray.rpc.ForwardTaskRequest.task_id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='taskId', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='uncommitted_tasks', full_name='ray.rpc.ForwardTaskRequest.uncommitted_tasks', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='uncommittedTasks', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=530,
  serialized_end=635,
)


_FORWARDTASKREPLY = _descriptor.Descriptor(
  name='ForwardTaskReply',
  full_name='ray.rpc.ForwardTaskReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=637,
  serialized_end=655,
)


_NODESTATSREQUEST = _descriptor.Descriptor(
  name='NodeStatsRequest',
  full_name='ray.rpc.NodeStatsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=657,
  serialized_end=675,
)


_WORKERSTATS = _descriptor.Descriptor(
  name='WorkerStats',
  full_name='ray.rpc.WorkerStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pid', full_name='ray.rpc.WorkerStats.pid', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='pid', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_driver', full_name='ray.rpc.WorkerStats.is_driver', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='isDriver', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=677,
  serialized_end=737,
)


_VIEWDATA_MEASURE = _descriptor.Descriptor(
  name='Measure',
  full_name='ray.rpc.ViewData.Measure',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tags', full_name='ray.rpc.ViewData.Measure.tags', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='tags', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='int_value', full_name='ray.rpc.ViewData.Measure.int_value', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='intValue', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='double_value', full_name='ray.rpc.ViewData.Measure.double_value', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='doubleValue', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='distribution_min', full_name='ray.rpc.ViewData.Measure.distribution_min', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='distributionMin', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='distribution_mean', full_name='ray.rpc.ViewData.Measure.distribution_mean', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='distributionMean', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='distribution_max', full_name='ray.rpc.ViewData.Measure.distribution_max', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='distributionMax', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='distribution_count', full_name='ray.rpc.ViewData.Measure.distribution_count', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='distributionCount', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='distribution_bucket_boundaries', full_name='ray.rpc.ViewData.Measure.distribution_bucket_boundaries', index=7,
      number=8, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='distributionBucketBoundaries', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='distribution_bucket_counts', full_name='ray.rpc.ViewData.Measure.distribution_bucket_counts', index=8,
      number=9, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='distributionBucketCounts', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=837,
  serialized_end=1240,
)

_VIEWDATA = _descriptor.Descriptor(
  name='ViewData',
  full_name='ray.rpc.ViewData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='view_name', full_name='ray.rpc.ViewData.view_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='viewName', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='measures', full_name='ray.rpc.ViewData.measures', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='measures', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_VIEWDATA_MEASURE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=740,
  serialized_end=1240,
)


_NODESTATSREPLY = _descriptor.Descriptor(
  name='NodeStatsReply',
  full_name='ray.rpc.NodeStatsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='workers_stats', full_name='ray.rpc.NodeStatsReply.workers_stats', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='workersStats', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='view_data', full_name='ray.rpc.NodeStatsReply.view_data', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='viewData', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1242,
  serialized_end=1365,
)

_WORKERLEASEREQUEST.fields_by_name['resource_spec'].message_type = src_dot_ray_dot_protobuf_dot_common__pb2._TASKSPEC
_WORKERLEASEREPLY.fields_by_name['worker_address'].message_type = src_dot_ray_dot_protobuf_dot_common__pb2._ADDRESS
_WORKERLEASEREPLY.fields_by_name['retry_at_raylet_address'].message_type = src_dot_ray_dot_protobuf_dot_common__pb2._ADDRESS
_WORKERLEASEREPLY.fields_by_name['resource_mapping'].message_type = src_dot_ray_dot_protobuf_dot_common__pb2._RESOURCEMAPENTRY
_FORWARDTASKREQUEST.fields_by_name['uncommitted_tasks'].message_type = src_dot_ray_dot_protobuf_dot_common__pb2._TASK
_VIEWDATA_MEASURE.containing_type = _VIEWDATA
_VIEWDATA.fields_by_name['measures'].message_type = _VIEWDATA_MEASURE
_NODESTATSREPLY.fields_by_name['workers_stats'].message_type = _WORKERSTATS
_NODESTATSREPLY.fields_by_name['view_data'].message_type = _VIEWDATA
DESCRIPTOR.message_types_by_name['WorkerLeaseRequest'] = _WORKERLEASEREQUEST
DESCRIPTOR.message_types_by_name['WorkerLeaseReply'] = _WORKERLEASEREPLY
DESCRIPTOR.message_types_by_name['ReturnWorkerRequest'] = _RETURNWORKERREQUEST
DESCRIPTOR.message_types_by_name['ReturnWorkerReply'] = _RETURNWORKERREPLY
DESCRIPTOR.message_types_by_name['ForwardTaskRequest'] = _FORWARDTASKREQUEST
DESCRIPTOR.message_types_by_name['ForwardTaskReply'] = _FORWARDTASKREPLY
DESCRIPTOR.message_types_by_name['NodeStatsRequest'] = _NODESTATSREQUEST
DESCRIPTOR.message_types_by_name['WorkerStats'] = _WORKERSTATS
DESCRIPTOR.message_types_by_name['ViewData'] = _VIEWDATA
DESCRIPTOR.message_types_by_name['NodeStatsReply'] = _NODESTATSREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

WorkerLeaseRequest = _reflection.GeneratedProtocolMessageType('WorkerLeaseRequest', (_message.Message,), {
  'DESCRIPTOR' : _WORKERLEASEREQUEST,
  '__module__' : 'src.ray.protobuf.node_manager_pb2'
  # @@protoc_insertion_point(class_scope:ray.rpc.WorkerLeaseRequest)
  })
_sym_db.RegisterMessage(WorkerLeaseRequest)

WorkerLeaseReply = _reflection.GeneratedProtocolMessageType('WorkerLeaseReply', (_message.Message,), {
  'DESCRIPTOR' : _WORKERLEASEREPLY,
  '__module__' : 'src.ray.protobuf.node_manager_pb2'
  # @@protoc_insertion_point(class_scope:ray.rpc.WorkerLeaseReply)
  })
_sym_db.RegisterMessage(WorkerLeaseReply)

ReturnWorkerRequest = _reflection.GeneratedProtocolMessageType('ReturnWorkerRequest', (_message.Message,), {
  'DESCRIPTOR' : _RETURNWORKERREQUEST,
  '__module__' : 'src.ray.protobuf.node_manager_pb2'
  # @@protoc_insertion_point(class_scope:ray.rpc.ReturnWorkerRequest)
  })
_sym_db.RegisterMessage(ReturnWorkerRequest)

ReturnWorkerReply = _reflection.GeneratedProtocolMessageType('ReturnWorkerReply', (_message.Message,), {
  'DESCRIPTOR' : _RETURNWORKERREPLY,
  '__module__' : 'src.ray.protobuf.node_manager_pb2'
  # @@protoc_insertion_point(class_scope:ray.rpc.ReturnWorkerReply)
  })
_sym_db.RegisterMessage(ReturnWorkerReply)

ForwardTaskRequest = _reflection.GeneratedProtocolMessageType('ForwardTaskRequest', (_message.Message,), {
  'DESCRIPTOR' : _FORWARDTASKREQUEST,
  '__module__' : 'src.ray.protobuf.node_manager_pb2'
  # @@protoc_insertion_point(class_scope:ray.rpc.ForwardTaskRequest)
  })
_sym_db.RegisterMessage(ForwardTaskRequest)

ForwardTaskReply = _reflection.GeneratedProtocolMessageType('ForwardTaskReply', (_message.Message,), {
  'DESCRIPTOR' : _FORWARDTASKREPLY,
  '__module__' : 'src.ray.protobuf.node_manager_pb2'
  # @@protoc_insertion_point(class_scope:ray.rpc.ForwardTaskReply)
  })
_sym_db.RegisterMessage(ForwardTaskReply)

NodeStatsRequest = _reflection.GeneratedProtocolMessageType('NodeStatsRequest', (_message.Message,), {
  'DESCRIPTOR' : _NODESTATSREQUEST,
  '__module__' : 'src.ray.protobuf.node_manager_pb2'
  # @@protoc_insertion_point(class_scope:ray.rpc.NodeStatsRequest)
  })
_sym_db.RegisterMessage(NodeStatsRequest)

WorkerStats = _reflection.GeneratedProtocolMessageType('WorkerStats', (_message.Message,), {
  'DESCRIPTOR' : _WORKERSTATS,
  '__module__' : 'src.ray.protobuf.node_manager_pb2'
  # @@protoc_insertion_point(class_scope:ray.rpc.WorkerStats)
  })
_sym_db.RegisterMessage(WorkerStats)

ViewData = _reflection.GeneratedProtocolMessageType('ViewData', (_message.Message,), {

  'Measure' : _reflection.GeneratedProtocolMessageType('Measure', (_message.Message,), {
    'DESCRIPTOR' : _VIEWDATA_MEASURE,
    '__module__' : 'src.ray.protobuf.node_manager_pb2'
    # @@protoc_insertion_point(class_scope:ray.rpc.ViewData.Measure)
    })
  ,
  'DESCRIPTOR' : _VIEWDATA,
  '__module__' : 'src.ray.protobuf.node_manager_pb2'
  # @@protoc_insertion_point(class_scope:ray.rpc.ViewData)
  })
_sym_db.RegisterMessage(ViewData)
_sym_db.RegisterMessage(ViewData.Measure)

NodeStatsReply = _reflection.GeneratedProtocolMessageType('NodeStatsReply', (_message.Message,), {
  'DESCRIPTOR' : _NODESTATSREPLY,
  '__module__' : 'src.ray.protobuf.node_manager_pb2'
  # @@protoc_insertion_point(class_scope:ray.rpc.NodeStatsReply)
  })
_sym_db.RegisterMessage(NodeStatsReply)



_NODEMANAGERSERVICE = _descriptor.ServiceDescriptor(
  name='NodeManagerService',
  full_name='ray.rpc.NodeManagerService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=1368,
  serialized_end=1679,
  methods=[
  _descriptor.MethodDescriptor(
    name='RequestWorkerLease',
    full_name='ray.rpc.NodeManagerService.RequestWorkerLease',
    index=0,
    containing_service=None,
    input_type=_WORKERLEASEREQUEST,
    output_type=_WORKERLEASEREPLY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ReturnWorker',
    full_name='ray.rpc.NodeManagerService.ReturnWorker',
    index=1,
    containing_service=None,
    input_type=_RETURNWORKERREQUEST,
    output_type=_RETURNWORKERREPLY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ForwardTask',
    full_name='ray.rpc.NodeManagerService.ForwardTask',
    index=2,
    containing_service=None,
    input_type=_FORWARDTASKREQUEST,
    output_type=_FORWARDTASKREPLY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetNodeStats',
    full_name='ray.rpc.NodeManagerService.GetNodeStats',
    index=3,
    containing_service=None,
    input_type=_NODESTATSREQUEST,
    output_type=_NODESTATSREPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_NODEMANAGERSERVICE)

DESCRIPTOR.services_by_name['NodeManagerService'] = _NODEMANAGERSERVICE

# @@protoc_insertion_point(module_scope)
